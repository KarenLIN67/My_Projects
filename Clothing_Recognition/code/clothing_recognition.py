# -*- coding: utf-8 -*-
"""成果程式碼.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xgYOCsjQkn-6tOhAeadIblXW4Q0E8MS1
"""

from tensorflow import keras                           #模型2
import tensorflow as tf                               #匯入模型
import tkinter as tk

from tkinter import filedialog
import matplotlib.pyplot as plt
import numpy as np
import random
import os                                              #匯入
os.environ["KMP_DUPLICATE_LIB_OK"]="TRUE"

mnist = tf.keras.datasets.fashion_mnist

(training_images, training_labels),(test_images,test_labels) = mnist.load_data()

EAGER = True #TensorFlow 的 Eager Execution 是一种命令式编程环境，可立即评估运算

model = keras.Sequential([
    #(-1,28,28)->(-1,100)
    keras.layers.SimpleRNN(
    # for batch_input_shape, if using tensorflow as the backend, we have to put None for the batch_size.
    # Otherwise, model.evaluate() will get error.
    input_shape=(28, 28),       # Or: input_dim=INPUT_SIZE, input_length=TIME_STEPS,
    units=256,
    unroll=True),
    keras.layers.Dropout(rate=0.2),
    #(-1,256)->(-1,10)
    keras.layers.Dense(10, activation=tf.nn.softmax)
])

training_images  = training_images / 255.0
test_images = test_images / 255.0                                   #定位點中心

lr = 0.001
epochs = 20
model.compile(optimizer=tf.compat.v1.train.AdamOptimizer(lr),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(training_images, training_labels, epochs=epochs,validation_data=[test_images[:1000],test_labels[:1000]])

print(model.summary())

model.evaluate(test_images, test_labels)  #測試

classifications = model.predict(test_images)   #預測
print("預測值:",classifications[0])
print("")
x=[0,1,2,3,4,5,6,7,8,9]  #製圖
y=classifications[0]
values = ['T-shirt','Pants', 'Pullover', 'Dress', 'Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']
plt.subplot(2,1,1)
plt.plot(x,y)
plt.xticks(x,values,rotation=-15)
max=0
for i in range(10):
    if max<y[i]:
        max=y[i]
        ans=i
for i in range(10):
    if ans==i:
        if test_labels[0]==ans:
            print("預測是",values[i],"正確答案是",values[i])
plt.subplot(2, 1, 2)
plt.tight_layout()
plt.imshow(test_images[0])

classifications = model.predict(test_images)   #預測
test_random=random.randint(0,9999)
print("預測值:",classifications[test_random])
print("")
x=[0,1,2,3,4,5,6,7,8,9]  #製圖
y=classifications[test_random]
values = ['T-shirt','Pants', 'Pullover', 'Dress', 'Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']
plt.subplot(2,1,1)
plt.plot(x,y)
plt.xticks(x,values,rotation=-15)
max=0
for i in range(10):
    if max<y[i]:
        max=y[i]
        ans=i
for i in range(10):
    if ans==i:
        if test_labels[test_random]==ans:
            print("預測是",values[i],"正確答案是",values[i])
plt.subplot(2, 1, 2)
plt.tight_layout()
plt.imshow(test_images[test_random])

